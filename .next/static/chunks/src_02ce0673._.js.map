{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/context/CartContext.tsx"],"sourcesContent":["'use client';\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Cart, CartItem, CartContextType, CustomerInfo } from '@/types/cart';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Initialization of context with empty values\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\n// Initial cart state\r\nconst initialCart: Cart = {\r\n  items: [],\r\n  totalPrice: 0\r\n};\r\n\r\n// Cart context provider\r\nexport const CartProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  // Cart state\r\n  const [cart, setCart] = useState<Cart>(initialCart);\r\n  // Cart visibility state\r\n  const [isCartOpen, setIsCartOpen] = useState(false);\r\n  // Notification state\r\n  const [notification, setNotification] = useState<{\r\n    visible: boolean;\r\n    message: string;\r\n    type: 'success' | 'error';\r\n  }>({\r\n    visible: false,\r\n    message: '',\r\n    type: 'success'\r\n  });\r\n  \r\n  // Load cart from localStorage on initialization\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      try {\r\n        const parsedCart = JSON.parse(savedCart);\r\n        setCart(parsedCart);\r\n      } catch (error) {\r\n        console.error('Failed to parse cart from localStorage:', error);\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  // Save cart to localStorage when it changes\r\n  useEffect(() => {\r\n    if (cart.items.length > 0) {\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n    } else {\r\n      localStorage.removeItem('cart');\r\n    }\r\n  }, [cart]);\r\n  \r\n  // Recalculate total price when cart items change\r\n  useEffect(() => {\r\n    const newTotalPrice = cart.items.reduce(\r\n      (total, item) => total + item.price * item.quantity, \r\n      0\r\n    );\r\n    \r\n    setCart(prevCart => ({\r\n      ...prevCart,\r\n      totalPrice: parseFloat(newTotalPrice.toFixed(2))\r\n    }));\r\n  }, [cart.items]);\r\n  \r\n  // Show notification\r\n  const showNotification = (message: string, type: 'success' | 'error' = 'success') => {\r\n    setNotification({\r\n      visible: true,\r\n      message,\r\n      type\r\n    });\r\n    \r\n    // Hide notification after 3 seconds\r\n    setTimeout(() => {\r\n      setNotification(prev => ({ ...prev, visible: false }));\r\n    }, 3000);\r\n  };\r\n  \r\n  // Add item to cart\r\n  const addToCart = (item: Omit<CartItem, 'id'>) => {\r\n    setCart(prevCart => {\r\n      // Check if the item already exists in the cart with the same parameters\r\n      const existingItemIndex = prevCart.items.findIndex(\r\n        i => i.type === item.type && \r\n            i.swl === item.swl && \r\n            i.length === item.length && \r\n            i.color === item.color\r\n      );\r\n      \r\n      // If the item exists, increase its quantity\r\n      if (existingItemIndex !== -1) {\r\n        const updatedItems = [...prevCart.items];\r\n        updatedItems[existingItemIndex] = {\r\n          ...updatedItems[existingItemIndex],\r\n          quantity: updatedItems[existingItemIndex].quantity + item.quantity\r\n        };\r\n        \r\n        return {\r\n          ...prevCart,\r\n          items: updatedItems\r\n        };\r\n      }\r\n      \r\n      // If the item doesn't exist, add it as new\r\n      return {\r\n        ...prevCart,\r\n        items: [...prevCart.items, { ...item, id: uuidv4() }]\r\n      };\r\n    });\r\n    \r\n    // Show notification instead of opening the cart\r\n    showNotification(`Added to cart: ${item.title} (${item.quantity})`);\r\n  };\r\n  \r\n  // Remove item from cart\r\n  const removeFromCart = (id: string) => {\r\n    setCart(prevCart => ({\r\n      ...prevCart,\r\n      items: prevCart.items.filter(item => item.id !== id)\r\n    }));\r\n  };\r\n  \r\n  // Update item quantity\r\n  const updateQuantity = (id: string, quantity: number) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(id);\r\n      return;\r\n    }\r\n    \r\n    setCart(prevCart => ({\r\n      ...prevCart,\r\n      items: prevCart.items.map(item => \r\n        item.id === id ? { ...item, quantity } : item\r\n      )\r\n    }));\r\n  };\r\n  \r\n  // Clear the cart\r\n  const clearCart = () => {\r\n    setCart(initialCart);\r\n    localStorage.removeItem('cart');\r\n  };\r\n  \r\n  // Set customer information\r\n  const setCustomerInfo = (info: CustomerInfo) => {\r\n    setCart(prevCart => ({\r\n      ...prevCart,\r\n      customer: info\r\n    }));\r\n  };\r\n  \r\n  // Open cart\r\n  const openCart = () => setIsCartOpen(true);\r\n  \r\n  // Close cart\r\n  const closeCart = () => setIsCartOpen(false);\r\n  \r\n  // Provide context\r\n  const value: CartContextType = {\r\n    cart,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    setCustomerInfo,\r\n    isCartOpen,\r\n    openCart,\r\n    closeCart,\r\n    notification\r\n  };\r\n  \r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n      {notification.visible && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook for using cart context\r\nexport const useCart = (): CartContextType => {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n}; "],"names":[],"mappings":";;;;;AACA;AAEA;;;AAHA;;;AAKA,8CAA8C;AAC9C,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAE/D,qBAAqB;AACrB,MAAM,cAAoB;IACxB,OAAO,EAAE;IACT,YAAY;AACd;AAGO,MAAM,eAAkD,CAAC,EAAE,QAAQ,EAAE;;IAC1E,aAAa;IACb,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAQ;IACvC,wBAAwB;IACxB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,qBAAqB;IACrB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAI5C;QACD,SAAS;QACT,SAAS;QACT,MAAM;IACR;IAEA,gDAAgD;IAChD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,IAAI;oBACF,MAAM,aAAa,KAAK,KAAK,CAAC;oBAC9B,QAAQ;gBACV,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,2CAA2C;gBAC3D;YACF;QACF;iCAAG,EAAE;IAEL,4CAA4C;IAC5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,KAAK,KAAK,CAAC,MAAM,GAAG,GAAG;gBACzB,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAC9C,OAAO;gBACL,aAAa,UAAU,CAAC;YAC1B;QACF;iCAAG;QAAC;KAAK;IAET,iDAAiD;IACjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,gBAAgB,KAAK,KAAK,CAAC,MAAM;wDACrC,CAAC,OAAO,OAAS,QAAQ,KAAK,KAAK,GAAG,KAAK,QAAQ;uDACnD;YAGF;0CAAQ,CAAA,WAAY,CAAC;wBACnB,GAAG,QAAQ;wBACX,YAAY,WAAW,cAAc,OAAO,CAAC;oBAC/C,CAAC;;QACH;iCAAG;QAAC,KAAK,KAAK;KAAC;IAEf,oBAAoB;IACpB,MAAM,mBAAmB,CAAC,SAAiB,OAA4B,SAAS;QAC9E,gBAAgB;YACd,SAAS;YACT;YACA;QACF;QAEA,oCAAoC;QACpC,WAAW;YACT,gBAAgB,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAE,SAAS;gBAAM,CAAC;QACtD,GAAG;IACL;IAEA,mBAAmB;IACnB,MAAM,YAAY,CAAC;QACjB,QAAQ,CAAA;YACN,wEAAwE;YACxE,MAAM,oBAAoB,SAAS,KAAK,CAAC,SAAS,CAChD,CAAA,IAAK,EAAE,IAAI,KAAK,KAAK,IAAI,IACrB,EAAE,GAAG,KAAK,KAAK,GAAG,IAClB,EAAE,MAAM,KAAK,KAAK,MAAM,IACxB,EAAE,KAAK,KAAK,KAAK,KAAK;YAG5B,4CAA4C;YAC5C,IAAI,sBAAsB,CAAC,GAAG;gBAC5B,MAAM,eAAe;uBAAI,SAAS,KAAK;iBAAC;gBACxC,YAAY,CAAC,kBAAkB,GAAG;oBAChC,GAAG,YAAY,CAAC,kBAAkB;oBAClC,UAAU,YAAY,CAAC,kBAAkB,CAAC,QAAQ,GAAG,KAAK,QAAQ;gBACpE;gBAEA,OAAO;oBACL,GAAG,QAAQ;oBACX,OAAO;gBACT;YACF;YAEA,2CAA2C;YAC3C,OAAO;gBACL,GAAG,QAAQ;gBACX,OAAO;uBAAI,SAAS,KAAK;oBAAE;wBAAE,GAAG,IAAI;wBAAE,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;oBAAI;iBAAE;YACvD;QACF;QAEA,gDAAgD;QAChD,iBAAiB,CAAC,eAAe,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC;IACpE;IAEA,wBAAwB;IACxB,MAAM,iBAAiB,CAAC;QACtB,QAAQ,CAAA,WAAY,CAAC;gBACnB,GAAG,QAAQ;gBACX,OAAO,SAAS,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;YACnD,CAAC;IACH;IAEA,uBAAuB;IACvB,MAAM,iBAAiB,CAAC,IAAY;QAClC,IAAI,YAAY,GAAG;YACjB,eAAe;YACf;QACF;QAEA,QAAQ,CAAA,WAAY,CAAC;gBACnB,GAAG,QAAQ;gBACX,OAAO,SAAS,KAAK,CAAC,GAAG,CAAC,CAAA,OACxB,KAAK,EAAE,KAAK,KAAK;wBAAE,GAAG,IAAI;wBAAE;oBAAS,IAAI;YAE7C,CAAC;IACH;IAEA,iBAAiB;IACjB,MAAM,YAAY;QAChB,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,2BAA2B;IAC3B,MAAM,kBAAkB,CAAC;QACvB,QAAQ,CAAA,WAAY,CAAC;gBACnB,GAAG,QAAQ;gBACX,UAAU;YACZ,CAAC;IACH;IAEA,YAAY;IACZ,MAAM,WAAW,IAAM,cAAc;IAErC,aAAa;IACb,MAAM,YAAY,IAAM,cAAc;IAEtC,kBAAkB;IAClB,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;;YAC1B;YACA,aAAa,OAAO,kBACnB,6LAAC;gBAAI,WAAW,CAAC,aAAa,EAAE,aAAa,IAAI,EAAE;0BAChD,aAAa,OAAO;;;;;;;;;;;;AAK/B;GAxKa;KAAA;AA2KN,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { FaPhone, FaEnvelope, FaShoppingCart } from 'react-icons/fa';\nimport { useCart } from '../context/CartContext';\n\nconst Header = () => {\n  const { openCart, cart } = useCart();\n  const cartItemCount = cart.items.length;\n\n  return (\n    <div className=\"top-header\">\n      <a href=\"/\" className=\"logo\">\n        <span className=\"eb-logo\">EB</span>\n        <span className=\"install-word\">INSTALL</span>\n      </a>\n      <div className=\"top-nav\">\n        <div className=\"contact-items\">\n          <div className=\"contact-item\">\n            <FaPhone size={14} />\n            <a href=\"tel:+447478136061\"> +44 7478 136061</a>\n          </div>\n          <div className=\"contact-item\">\n            <FaPhone size={14} />\n            <a href=\"tel:+447340626369\"> +44 7340 626369</a>\n          </div>\n          <div className=\"contact-item\">\n            <FaEnvelope size={14} />\n            <a href=\"mailto:e.b.install.ltd@gmail.com\"> e.b.install.ltd@gmail.com</a>\n          </div>\n        </div>\n        <button className=\"cart-button\" onClick={openCart}>\n          <FaShoppingCart size={20} />\n          {cartItemCount > 0 && (\n            <span className=\"cart-item-count\">{cartItemCount}</span>\n          )}\n          <span>Cart</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header; "],"names":[],"mappings":";;;;AAGA;AACA;;;AAJA;;;AAMA,MAAM,SAAS;;IACb,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IACjC,MAAM,gBAAgB,KAAK,KAAK,CAAC,MAAM;IAEvC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAE,MAAK;gBAAI,WAAU;;kCACpB,6LAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,6LAAC;wBAAK,WAAU;kCAAe;;;;;;;;;;;;0BAEjC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,iJAAA,CAAA,UAAO;wCAAC,MAAM;;;;;;kDACf,6LAAC;wCAAE,MAAK;kDAAoB;;;;;;;;;;;;0CAE9B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,iJAAA,CAAA,UAAO;wCAAC,MAAM;;;;;;kDACf,6LAAC;wCAAE,MAAK;kDAAoB;;;;;;;;;;;;0CAE9B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,iJAAA,CAAA,aAAU;wCAAC,MAAM;;;;;;kDAClB,6LAAC;wCAAE,MAAK;kDAAmC;;;;;;;;;;;;;;;;;;kCAG/C,6LAAC;wBAAO,WAAU;wBAAc,SAAS;;0CACvC,6LAAC,iJAAA,CAAA,iBAAc;gCAAC,MAAM;;;;;;4BACrB,gBAAgB,mBACf,6LAAC;gCAAK,WAAU;0CAAmB;;;;;;0CAErC,6LAAC;0CAAK;;;;;;;;;;;;;;;;;;;;;;;;AAKhB;GAnCM;;QACuB,iIAAA,CAAA,UAAO;;;KAD9B;uCAqCS","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/components/CartSidebar.tsx"],"sourcesContent":["'use client';\nimport React, { useState } from 'react';\nimport { useCart } from '@/context/CartContext';\nimport { CustomerInfo } from '@/types/cart';\n\n// Cart sidebar component\nconst CartSidebar: React.FC = () => {\n  const { \n    cart, \n    isCartOpen, \n    closeCart, \n    removeFromCart, \n    updateQuantity,\n    clearCart,\n    setCustomerInfo\n  } = useCart();\n  \n  // State for customer information\n  const [customerInfo, setCustomerFormInfo] = useState<CustomerInfo>({\n    name: '',\n    phone: '',\n    email: '',\n    notes: ''\n  });\n  \n  // State for checkout form display\n  const [showCheckoutForm, setShowCheckoutForm] = useState(false);\n  \n  // State for form errors\n  const [formErrors, setFormErrors] = useState<{[key: string]: string}>({});\n  const [orderStatus, setOrderStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\n  \n  // Handle customer info form changes\n  const handleCustomerInfoChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setCustomerFormInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear field error on input\n    if (formErrors[name]) {\n      setFormErrors(prev => {\n        const newErrors = {...prev};\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n  \n  // Form validation\n  const validateForm = (): boolean => {\n    const errors: {[key: string]: string} = {};\n    \n    if (!customerInfo.name.trim()) {\n      errors.name = 'Name is required';\n    }\n    \n    if (!customerInfo.phone.trim()) {\n      errors.phone = 'Phone is required';\n    } else if (!/^[\\d\\s\\+\\-\\(\\)]{10,15}$/.test(customerInfo.phone)) {\n      errors.phone = 'Please enter a valid phone number';\n    }\n    \n    if (customerInfo.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(customerInfo.email)) {\n      errors.email = 'Please enter a valid email';\n    }\n    \n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  \n  // Submit order\n  const handleSubmitOrder = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    // Update customer info in context\n    setCustomerInfo(customerInfo);\n    \n    // Prepare order data\n    const orderData = {\n      items: cart.items,\n      totalPrice: cart.totalPrice,\n      customerInfo\n    };\n    \n    setOrderStatus('loading');\n    \n    try {\n      // Send data via email\n      const emailContent = `\nNew order from ${customerInfo.name}:\n\nContact Information:\nName: ${customerInfo.name}\nPhone: ${customerInfo.phone}\nEmail: ${customerInfo.email || 'Not provided'}\nNotes: ${customerInfo.notes || 'None'}\n\nOrdered Items:\n${cart.items.map(item => \n  `- ${item.title} (${item.quantity} units)\n   SWL: ${item.swl}, Length: ${item.length}\n   Price: £${item.price.toFixed(2)} × ${item.quantity} = £${(item.price * item.quantity).toFixed(2)}`\n).join('\\n\\n')}\n\nTotal: £${cart.totalPrice.toFixed(2)}\n      `;\n      \n      // Format parameters for mailto link\n      const subject = encodeURIComponent('New order from website');\n      const body = encodeURIComponent(emailContent);\n      const mailtoLink = `mailto:info@ebinstall.co.uk?subject=${subject}&body=${body}`;\n      \n      // Open email client\n      window.location.href = mailtoLink;\n      \n      // If successful\n      setOrderStatus('success');\n      setTimeout(() => {\n        clearCart();\n        closeCart();\n        setOrderStatus('idle');\n        setShowCheckoutForm(false);\n      }, 3000);\n    } catch (error) {\n      console.error('Error sending order:', error);\n      setOrderStatus('error');\n    }\n  };\n  \n  // If cart is closed, don't render the component\n  if (!isCartOpen) {\n    return null;\n  }\n  \n  return (\n    <div className=\"cart-sidebar-overlay\">\n      <div className=\"cart-sidebar\">\n        <div className=\"cart-header\">\n          <h2>Cart</h2>\n          <button className=\"close-cart\" onClick={closeCart}>×</button>\n        </div>\n        \n        {cart.items.length === 0 ? (\n          <div className=\"empty-cart\">\n            <p>Your cart is empty</p>\n            <button className=\"continue-shopping\" onClick={closeCart}>\n              Continue Shopping\n            </button>\n          </div>\n        ) : (\n          <>\n            <div className=\"cart-items\">\n              {cart.items.map(item => (\n                <div key={item.id} className=\"cart-item\">\n                  <div className=\"cart-item-info\">\n                    <h3>{item.title}</h3>\n                    <div className=\"cart-item-details\">\n                      <p>SWL: {item.swl}, Length: {item.length}</p>\n                      {item.color && <p>Color: {item.color}</p>}\n                      <p className=\"item-price\">£{item.price.toFixed(2)} / week</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"cart-item-actions\">\n                    <div className=\"quantity-control\">\n                      <button \n                        onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                        className=\"quantity-btn\"\n                      >\n                        -\n                      </button>\n                      <span className=\"quantity\">{item.quantity}</span>\n                      <button \n                        onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                        className=\"quantity-btn\"\n                      >\n                        +\n                      </button>\n                    </div>\n                    <button \n                      onClick={() => removeFromCart(item.id)}\n                      className=\"remove-item\"\n                    >\n                      Remove\n                    </button>\n                  </div>\n                  \n                  <div className=\"cart-item-total\">\n                    £{(item.price * item.quantity).toFixed(2)}\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"cart-summary\">\n              <div className=\"cart-total\">\n                <span>Total:</span>\n                <span>£{cart.totalPrice.toFixed(2)}</span>\n              </div>\n              \n              {!showCheckoutForm ? (\n                <div className=\"cart-buttons\">\n                  <button \n                    className=\"checkout-button\"\n                    onClick={() => setShowCheckoutForm(true)}\n                  >\n                    Checkout\n                  </button>\n                  <button \n                    className=\"clear-cart-button\"\n                    onClick={clearCart}\n                  >\n                    Clear Cart\n                  </button>\n                </div>\n              ) : (\n                <form onSubmit={handleSubmitOrder} className=\"checkout-form\">\n                  <h3>Your Information</h3>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name*</label>\n                    <input \n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      value={customerInfo.name}\n                      onChange={handleCustomerInfoChange}\n                      required\n                    />\n                    {formErrors.name && <span className=\"error\">{formErrors.name}</span>}\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"phone\">Phone*</label>\n                    <input \n                      type=\"tel\"\n                      id=\"phone\"\n                      name=\"phone\"\n                      value={customerInfo.phone}\n                      onChange={handleCustomerInfoChange}\n                      required\n                    />\n                    {formErrors.phone && <span className=\"error\">{formErrors.phone}</span>}\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input \n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      value={customerInfo.email}\n                      onChange={handleCustomerInfoChange}\n                    />\n                    {formErrors.email && <span className=\"error\">{formErrors.email}</span>}\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"notes\">Order Notes</label>\n                    <textarea\n                      id=\"notes\"\n                      name=\"notes\"\n                      value={customerInfo.notes}\n                      onChange={handleCustomerInfoChange}\n                      rows={3}\n                    />\n                  </div>\n                  \n                  <div className=\"form-buttons\">\n                    <button \n                      type=\"submit\" \n                      className=\"submit-order\"\n                      disabled={orderStatus === 'loading'}\n                    >\n                      {orderStatus === 'loading' ? 'Sending...' : 'Send Order'}\n                    </button>\n                    <button \n                      type=\"button\"\n                      className=\"back-to-cart\"\n                      onClick={() => setShowCheckoutForm(false)}\n                    >\n                      Back to Cart\n                    </button>\n                  </div>\n                  \n                  {orderStatus === 'success' && (\n                    <div className=\"success-message\">\n                      Order sent successfully! We will contact you soon.\n                    </div>\n                  )}\n                  \n                  {orderStatus === 'error' && (\n                    <div className=\"error-message\">\n                      An error occurred when sending your order. Please try again or contact us directly.\n                    </div>\n                  )}\n                </form>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CartSidebar; "],"names":[],"mappings":"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","debugId":null}}]
}