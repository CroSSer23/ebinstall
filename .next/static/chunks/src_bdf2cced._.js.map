{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/components/MainHeader.tsx"],"sourcesContent":["import React from 'react';\n\nexport default function MainHeader() {\n  return (\n    <header>\n      <h1 className=\"site-title\">EB Install | Equipment Rental</h1>\n      <p className=\"site-description\">\n        Professional elevator and lifting equipment for engineering work with same-day delivery\n      </p>\n    </header>\n  );\n} "],"names":[],"mappings":";;;;;AAEe,SAAS;IACtB,qBACE,6LAAC;;0BACC,6LAAC;gBAAG,WAAU;0BAAa;;;;;;0BAC3B,6LAAC;gBAAE,WAAU;0BAAmB;;;;;;;;;;;;AAKtC;KATwB","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/components/CompanyInfo.tsx"],"sourcesContent":["import React from 'react';\nimport { FaHandshake, FaHistory, FaUsers, FaCertificate } from 'react-icons/fa';\n\nexport default function CompanyInfo() {\n  return (\n    <section className=\"company-info\">\n      <div className=\"container\">\n        <h2 className=\"section-title\">\n          Elevator Equipment Rental — <span className=\"highlight\">Easy and Convenient.</span>\n        </h2>\n        \n        <div className=\"info-cards-container\">\n          <div className=\"info-card\">\n            <div className=\"card-icon\">\n              <FaHandshake size={20} color=\"#FFD700\" />\n            </div>\n            <h3 className=\"info-title\">Order in a Few Clicks</h3>\n            <div className=\"card-content\">\n              <p className=\"info-text\">\n                We value your time, so we've made our rental process as simple as possible. There's no need to make any phone calls – you can do everything online.\n              </p>\n              <ul className=\"steps-list\">\n                <li><strong>Choose the equipment.</strong> Find the equipment you need in our catalog.</li>\n                <li><strong>Place your order.</strong> Fill out a simple form on our website.</li>\n                <li><strong>Confirm your order.</strong> We'll send you a confirmation email right away.</li>\n                <li><strong>Pay</strong> after you've finished using the equipment.</li>\n              </ul>\n              <p className=\"info-text\">\n                After that, we'll deliver the equipment to the address you provide within a few hours.\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"info-card\">\n            <div className=\"card-icon\">\n              <FaHistory size={20} color=\"#FFD700\" />\n            </div>\n            <h3 className=\"info-title\">Save Time and Money</h3>\n            <div className=\"card-content\">\n              <p className=\"info-text\">\n                Our service helps you save valuable resources:\n              </p>\n              <ul className=\"benefits-list\">\n                <li><strong>No unnecessary expenses.</strong> You don't need to purchase expensive equipment upfront or pay for storage. Just rent the equipment when you need it.</li>\n                <li><strong>Rental reminders.</strong> We send you timely reminders about your rental period, so you can return the equipment on time and avoid extra charges.</li>\n              </ul>\n            </div>\n          </div>\n          \n          <div className=\"info-card\">\n            <div className=\"card-icon\">\n              <FaUsers size={20} color=\"#FFD700\" />\n            </div>\n            <h3 className=\"info-title\">Experienced Team of Engineers</h3>\n            <div className=\"card-content\">\n              <p className=\"info-text\">\n                We're proud of our team of experienced engineers. They're experts in elevator equipment and are always working to improve our rental service.\n              </p>\n              <p className=\"info-text\">\n                Thanks to their knowledge and experience, you'll receive reliable equipment and professional support every step of the way.\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"info-card\">\n            <div className=\"card-icon\">\n              <FaCertificate size={20} color=\"#FFD700\" />\n            </div>\n            <h3 className=\"info-title\">Honesty and Openness</h3>\n            <div className=\"card-content\">\n              <p className=\"info-text\">\n                Our core principle is honesty. We value every customer and partner, so we work openly and fairly.\n              </p>\n              <p className=\"info-text accent\">\n                With us, renting equipment is simple, fast, and convenient!\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n} "],"names":[],"mappings":";;;;AACA;;;AAEe,SAAS;IACtB,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;;wBAAgB;sCACA,6LAAC;4BAAK,WAAU;sCAAY;;;;;;;;;;;;8BAG1D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,iJAAA,CAAA,cAAW;wCAAC,MAAM;wCAAI,OAAM;;;;;;;;;;;8CAE/B,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAAY;;;;;;sDAGzB,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;;sEAAG,6LAAC;sEAAO;;;;;;wDAA8B;;;;;;;8DAC1C,6LAAC;;sEAAG,6LAAC;sEAAO;;;;;;wDAA0B;;;;;;;8DACtC,6LAAC;;sEAAG,6LAAC;sEAAO;;;;;;wDAA4B;;;;;;;8DACxC,6LAAC;;sEAAG,6LAAC;sEAAO;;;;;;wDAAY;;;;;;;;;;;;;sDAE1B,6LAAC;4CAAE,WAAU;sDAAY;;;;;;;;;;;;;;;;;;sCAM7B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,iJAAA,CAAA,YAAS;wCAAC,MAAM;wCAAI,OAAM;;;;;;;;;;;8CAE7B,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAAY;;;;;;sDAGzB,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;;sEAAG,6LAAC;sEAAO;;;;;;wDAAiC;;;;;;;8DAC7C,6LAAC;;sEAAG,6LAAC;sEAAO;;;;;;wDAA0B;;;;;;;;;;;;;;;;;;;;;;;;;sCAK5C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,iJAAA,CAAA,UAAO;wCAAC,MAAM;wCAAI,OAAM;;;;;;;;;;;8CAE3B,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAAY;;;;;;sDAGzB,6LAAC;4CAAE,WAAU;sDAAY;;;;;;;;;;;;;;;;;;sCAM7B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,iJAAA,CAAA,gBAAa;wCAAC,MAAM;wCAAI,OAAM;;;;;;;;;;;8CAEjC,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAAY;;;;;;sDAGzB,6LAAC;4CAAE,WAAU;sDAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS9C;KA/EwB","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/types/equipment.ts"],"sourcesContent":["export interface EquipmentItem {\n  name: string;\n  price: string;\n  svgIcon: string;\n  specs?: string[];\n}\n\nexport interface EquipmentDetail extends EquipmentItem {\n  specs: string[];\n  weight?: string;\n  type?: string;\n  material?: string;\n  certification?: string;\n  features?: string[];\n  includes?: string[];\n  suitable?: string;\n  digital?: string;\n  capacity?: string;\n  weights?: string;\n  stackable?: string;\n}\n\nexport interface LeverHoist {\n  swl: string; // Safe Working Load (tons)\n  hol: string; // Height of Lift (meters)\n  pricePerWeek: string; // Price in GBP per week\n}\n\nexport interface LeverHoistData {\n  swlOptions: string[];\n  holOptions: string[];\n  priceMapping: Record<string, Record<string, number>>;\n  image?: string;\n}\n\nexport interface RoundSling {\n  swl: string;\n  ewl: string;  // Effective Working Length\n  pricePerWeek: string;\n}\n\nexport interface RoundSlingData {\n  swlOptions: string[];\n  lengthOptions: string[];\n  priceMapping: Record<string, Record<string, number>>;\n  image?: string;\n  availableColors?: string[];\n}\n\nexport interface WebbedSling {\n  swl: string;\n  ewl: string;  // Effective Working Length\n  pricePerWeek: string;\n}\n\nexport interface WebbedSlingData {\n  swlOptions: string[];\n  lengthOptions: string[];\n  priceMapping: Record<string, Record<string, number>>;\n  image?: string;\n  availableColors?: string[];\n}\n\n// Типы для работы с Google Sheets API\nexport type EquipmentType = string;\n\n// Определение констант типов для обратной совместимости\nexport const EquipmentTypes = {\n  LeverHoist: 'LeverHoist',\n  RoundSling: 'RoundSling',\n  WebbedSling: 'WebbedSling'\n};\n\n// Общий формат строки таблицы для предметов с SWL/HOL или SWL/EWL\nexport interface EquipmentRow {\n  id: string;\n  type: EquipmentType;\n  swl: string;\n  length: string; // HOL для LeverHoist, EWL для RoundSling и WebbedSling\n  pricePerWeek: string;\n  available: boolean;\n}\n\n// Интерфейс для спецификаций оборудования\nexport interface EquipmentSpecsRow {\n  type: EquipmentType;\n  specs: string[];\n  imageUrl: string;\n  primaryColor: string;\n  secondaryColor: string;\n}\n\n// Интерфейс для загрузки данных из Google Sheets\nexport interface SheetsData {\n  items: EquipmentRow[];\n  specs: Record<EquipmentType, EquipmentSpecsRow>;\n}\n\n// Интерфейс функций API для работы с данными\nexport interface EquipmentDataService {\n  fetchEquipmentData(sheetUrl: string): Promise<SheetsData>;\n  processSheetData(equipmentRows: string[][], specsRows: string[][]): SheetsData;\n  transformToComponentData(data: SheetsData): Record<EquipmentType, any>;\n} "],"names":[],"mappings":";;;AAmEO,MAAM,iBAAiB;IAC5B,YAAY;IACZ,YAAY;IACZ,aAAa;AACf","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/components/EquipmentCard.tsx"],"sourcesContent":["'use client';\nimport React, { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport { EquipmentTypes } from '@/types/equipment';\nimport { useCart } from '@/context/CartContext';\n\ninterface EquipmentCardProps {\n  type: string;\n  title: string;\n  data?: any;\n  defaultIcon?: string;\n}\n\nconst EquipmentCard: React.FC<EquipmentCardProps> = ({ type, title, data, defaultIcon }) => {\n  const [selectedSWL, setSelectedSWL] = useState<string>('');\n  const [selectedLength, setSelectedLength] = useState<string>('');\n  const [price, setPrice] = useState<number>(0);\n  const [showPriceTable, setShowPriceTable] = useState<boolean>(false);\n  const [showSpecs, setShowSpecs] = useState<boolean>(false);\n  const [quantity, setQuantity] = useState<number>(1);\n  \n  // Get cart context\n  const { addToCart } = useCart();\n  \n  // Define some properties based on type\n  const isLeverHoist = type === EquipmentTypes.LeverHoist;\n  const isRoundSling = type === EquipmentTypes.RoundSling;\n  const isWebbedSling = type === EquipmentTypes.WebbedSling;\n  \n  // Define CSS class for the card\n  const getCardClass = () => {\n    // Base class for all cards\n    let baseClass = 'equipment-card catalog-item';\n    \n    // For standard types add their specific styles\n    if (isLeverHoist) return `${baseClass} leverHoist-card`;\n    if (isRoundSling) return `${baseClass} roundSling-card`;\n    if (isWebbedSling) return `${baseClass} webbedSling-card`;\n    \n    // For other types just return base class\n    return baseClass;\n  };\n\n  // Use first available SWL and length options on first render\n  useEffect(() => {\n    if (data) {\n      // Select first SWL option\n      if (data.swlOptions && data.swlOptions.length > 0) {\n        setSelectedSWL(data.swlOptions[0]);\n      }\n      \n      // Select first length option\n      if (data.lengthOptions && data.lengthOptions.length > 0) {\n        setSelectedLength(data.lengthOptions[0]);\n      }\n      \n      // Update price\n      updatePrice(\n        data.swlOptions ? data.swlOptions[0] : '',\n        data.lengthOptions ? data.lengthOptions[0] : ''\n      );\n    }\n  }, [data]);\n\n  // Use effect to update price when selector values change\n  useEffect(() => {\n    if (selectedSWL && selectedLength) {\n      updatePrice(selectedSWL, selectedLength);\n    }\n  }, [selectedSWL, selectedLength, data]);\n\n  // Price update function\n  const updatePrice = (swl: string, length: string) => {\n    if (!data || !data.priceMapping) {\n      console.log('No price mapping data available');\n      setPrice(0);\n      return;\n    }\n    \n    // Check different formats of price data structure\n    if (data.priceMapping[swl] && data.priceMapping[swl][length]) {\n      // Structure priceMapping[swl][length]\n      const newPrice = data.priceMapping[swl][length];\n      setPrice(newPrice);\n    } else {\n      // Check alternative format key \"swl|length\"\n      const key = `${swl}|${length}`;\n      if (data.priceMapping[key]) {\n        const newPrice = data.priceMapping[key];\n        setPrice(newPrice);\n      } else if (data.basePrice) {\n        setPrice(data.basePrice);\n      } else {\n        setPrice(0);\n      }\n    }\n  };\n\n  // Value change handlers\n  const handleSWLChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newSWL = e.target.value;\n    setSelectedSWL(newSWL);\n    updatePrice(newSWL, selectedLength);\n  };\n\n  const handleLengthChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newLength = e.target.value;\n    setSelectedLength(newLength);\n    updatePrice(selectedSWL, newLength);\n  };\n  \n  // Quantity selection handlers\n  const handleQuantityChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value > 0) {\n      setQuantity(value);\n    }\n  };\n  \n  const decreaseQuantity = () => {\n    if (quantity > 1) {\n      setQuantity(quantity - 1);\n    }\n  };\n  \n  const increaseQuantity = () => {\n    setQuantity(quantity + 1);\n  };\n\n  // Function to add item to cart\n  const handleAddToCart = () => {\n    addToCart({\n      type,\n      title,\n      swl: selectedSWL,\n      length: selectedLength,\n      color: data.selectedColor ? data.selectedColor : undefined,\n      price,\n      quantity,\n      image: data.image || ''\n    });\n  };\n\n  // If no data, return empty component\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div className={getCardClass()}>\n      {/* Card header */}\n      <h2>{title}</h2>\n      \n      <div className=\"equipment-content\">\n        {/* Equipment image */}\n        <div className=\"equipment-image\">\n          {data.image ? (\n            <Image \n              src={data.image} \n              alt={title} \n              width={100} \n              height={100} \n              style={{ objectFit: 'contain' }} \n            />\n          ) : defaultIcon ? (\n            <div dangerouslySetInnerHTML={{ __html: defaultIcon }} />\n          ) : (\n            <div className=\"no-image\">No image</div>\n          )}\n        </div>\n        \n        <div className=\"equipment-details\">\n          {/* Configuration selectors */}\n          <div className=\"equipment-config\">\n            {/* SWL and length selectors */}\n            {data.swlOptions && data.swlOptions.length > 0 && (\n              <div className=\"config-row\">\n                <label className=\"config-label\">Safe Working Load:</label>\n                <select className=\"config-select\" value={selectedSWL} onChange={handleSWLChange}>\n                  {data.swlOptions.map((swl: string) => (\n                    <option key={swl} value={swl}>{swl}</option>\n                  ))}\n                </select>\n              </div>\n            )}\n            \n            {data.lengthOptions && data.lengthOptions.length > 0 && (\n              <div className=\"config-row\">\n                <label className=\"config-label\">Length:</label>\n                <select className=\"config-select\" value={selectedLength} onChange={handleLengthChange}>\n                  {data.lengthOptions.map((length: string) => (\n                    <option key={length} value={length}>{length}</option>\n                  ))}\n                </select>\n              </div>\n            )}\n            \n            {/* Available colors section */}\n            {data.availableColors && data.availableColors.length > 0 && (\n              <div className=\"colors-row\">\n                <div className=\"config-label\">Available Colors:</div>\n                <div className=\"color-options\">\n                  {data.availableColors.map((color: string, index: number) => (\n                    <span key={index} className=\"color-tag\">{color}</span>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {/* Quantity selection */}\n            <div className=\"quantity-selector\">\n              <span className=\"quantity-selector-label\">Quantity:</span>\n              <div className=\"quantity-selector-controls\">\n                <button \n                  type=\"button\" \n                  className=\"quantity-selector-btn\"\n                  onClick={decreaseQuantity}\n                >\n                  -\n                </button>\n                <input\n                  type=\"number\"\n                  className=\"quantity-selector-value\"\n                  value={quantity}\n                  onChange={handleQuantityChange}\n                  min=\"1\"\n                />\n                <button \n                  type=\"button\" \n                  className=\"quantity-selector-btn\"\n                  onClick={increaseQuantity}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          {/* Price */}\n          <div className=\"price-section\">\n            <div className=\"price-label\">Weekly Price:</div>\n            <div className=\"price-value\">£{price.toFixed(2)}</div>\n          </div>\n          \n          {/* Specifications - button and content */}\n          {data.specs && data.specs.length > 0 && (\n            <div className=\"specs-accordion\">\n              <button \n                className=\"specs-toggle\" \n                onClick={() => setShowSpecs(!showSpecs)}\n              >\n                Specifications\n                <span className={`toggle-icon ${showSpecs ? 'open' : ''}`}>\n                  ▼\n                </span>\n              </button>\n              \n              {showSpecs && (\n                <div className=\"specs-content\">\n                  <ul className=\"specs-list\">\n                    {data.specs.map((spec: string, index: number) => (\n                      <li key={index} className=\"spec-item\">{spec}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {/* Buttons */}\n          <div className=\"action-buttons\">\n            <button \n              className=\"add-to-cart-button\" \n              onClick={handleAddToCart}\n            >\n              Add to Cart\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EquipmentCard; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/services/sheetsService.ts"],"sourcesContent":["import { EquipmentDataService, EquipmentRow, EquipmentSpecsRow, EquipmentType, SheetsData } from '@/types/equipment';\n\nexport class GoogleSheetsService implements EquipmentDataService {\n  /**\n   * Получает ID таблицы из общедоступной ссылки на Google Sheets\n   */\n  private getSheetIdFromUrl(url: string): string | null {\n    // Пример ссылки: https://docs.google.com/spreadsheets/d/1AbCdEfG1HIJklMnOPqRsTUVwXYZ123456/edit#gid=0\n    const regex = /\\/d\\/([a-zA-Z0-9_-]+)/;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  }\n\n  /**\n   * Загружает данные из Google Sheets по ссылке\n   */\n  async fetchEquipmentData(sheetUrl: string): Promise<SheetsData> {\n    try {\n      console.log('Fetching equipment data from:', sheetUrl);\n      const sheetId = this.getSheetIdFromUrl(sheetUrl);\n      \n      if (!sheetId) {\n        console.error('Invalid Google Sheets URL:', sheetUrl);\n        throw new Error('Invalid Google Sheets URL');\n      }\n      \n      console.log('Sheet ID extracted:', sheetId);\n      \n      // Загрузка данных из листа с оборудованием\n      const equipmentUrl = `https://docs.google.com/spreadsheets/d/${sheetId}/gviz/tq?tqx=out:csv&sheet=Equipment`;\n      console.log('Fetching Equipment sheet from:', equipmentUrl);\n      const equipmentResponse = await fetch(equipmentUrl);\n      \n      // Загрузка данных из листа со спецификациями\n      const specificationsUrl = `https://docs.google.com/spreadsheets/d/${sheetId}/gviz/tq?tqx=out:csv&sheet=Specifications`;\n      console.log('Fetching Specifications sheet from:', specificationsUrl);\n      const specsResponse = await fetch(specificationsUrl);\n\n      // Проверяем статус ответов\n      if (!equipmentResponse.ok) {\n        console.error('Failed to fetch Equipment sheet. Status:', equipmentResponse.status, equipmentResponse.statusText);\n        throw new Error(`Failed to fetch Equipment sheet: ${equipmentResponse.status} ${equipmentResponse.statusText}`);\n      }\n      \n      if (!specsResponse.ok) {\n        console.error('Failed to fetch Specifications sheet. Status:', specsResponse.status, specsResponse.statusText);\n        throw new Error(`Failed to fetch Specifications sheet: ${specsResponse.status} ${specsResponse.statusText}`);\n      }\n\n      const equipmentText = await equipmentResponse.text();\n      console.log('Equipment data size:', equipmentText.length, 'bytes');\n      if (equipmentText.length < 50) {\n        console.log('Raw Equipment data:', equipmentText);\n      }\n      \n      const specsText = await specsResponse.text();\n      console.log('Specifications data size:', specsText.length, 'bytes');\n      if (specsText.length < 50) {\n        console.log('Raw Specifications data:', specsText);\n      }\n\n      // Парсинг CSV-данных\n      const equipmentRows = this.parseCSV(equipmentText);\n      console.log('Parsed Equipment rows:', equipmentRows.length);\n      if (equipmentRows.length > 0) {\n        console.log('Equipment headers:', equipmentRows[0]);\n      }\n      \n      const specsRows = this.parseCSV(specsText);\n      console.log('Parsed Specifications rows:', specsRows.length);\n      if (specsRows.length > 0) {\n        console.log('Specifications headers:', specsRows[0]);\n      }\n\n      return this.processSheetData(equipmentRows, specsRows);\n    } catch (error) {\n      console.error('Error fetching data from Google Sheets:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Парсинг CSV-строки в массив строк\n   */\n  private parseCSV(csvText: string): string[][] {\n    const rows: string[][] = [];\n    const lines = csvText.split('\\n');\n    \n    for (const line of lines) {\n      if (line.trim() === '') continue;\n      \n      // Разделяем строку по запятым, учитывая кавычки\n      const values: string[] = [];\n      let currentValue = '';\n      let insideQuotes = false;\n      \n      for (let i = 0; i < line.length; i++) {\n        const char = line[i];\n        \n        if (char === '\"') {\n          insideQuotes = !insideQuotes;\n        } else if (char === ',' && !insideQuotes) {\n          values.push(this.cleanValue(currentValue));\n          currentValue = '';\n        } else {\n          currentValue += char;\n        }\n      }\n      \n      // Добавляем последнее значение\n      values.push(this.cleanValue(currentValue));\n      rows.push(values);\n    }\n    \n    return rows;\n  }\n  \n  /**\n   * Очистка значения от кавычек и лишних пробелов\n   */\n  private cleanValue(value: string): string {\n    value = value.trim();\n    if (value.startsWith('\"') && value.endsWith('\"')) {\n      value = value.substring(1, value.length - 1);\n    }\n    // Заменяем двойные кавычки внутри значения на одинарные\n    value = value.replace(/\"\"/g, '\"');\n    return value;\n  }\n\n  /**\n   * Обрабатывает данные из Google Sheets и преобразует их в объект SheetsData\n   */\n  processSheetData(equipmentRows: string[][], specsRows: string[][]): SheetsData {\n    if (!equipmentRows || equipmentRows.length < 2 || !specsRows || specsRows.length < 1) {\n      console.error('Недостаточно данных из Google Sheets');\n      return { items: [], specs: {} as Record<EquipmentType, EquipmentSpecsRow> };\n    }\n\n    try {\n      // Получаем заголовки таблицы из первой строки\n      const equipmentHeaders = equipmentRows[0];\n      const specsHeaders = specsRows[0];\n      \n      console.log('Equipment Headers:', equipmentHeaders);\n      console.log('Specs Headers:', specsHeaders);\n      \n      // Индексы колонок для оборудования\n      const equipmentColumnIndexes = {\n        id: equipmentHeaders.indexOf('ID'),\n        type: equipmentHeaders.indexOf('Type'),\n        swl: equipmentHeaders.indexOf('SWL'),\n        length: equipmentHeaders.indexOf('Length'),\n        pricePerWeek: equipmentHeaders.indexOf('PricePerWeek'),\n        available: equipmentHeaders.indexOf('Available')\n      };\n\n      // Проверяем, что все необходимые колонки найдены\n      const missingColumns = Object.entries(equipmentColumnIndexes)\n        .filter(([_, index]) => index === -1)\n        .map(([name]) => name);\n      \n      if (missingColumns.length > 0) {\n        console.error(`Отсутствуют обязательные колонки в таблице оборудования: ${missingColumns.join(', ')}`);\n        return { items: [], specs: {} as Record<EquipmentType, EquipmentSpecsRow> };\n      }\n\n      // Индексы колонок для спецификаций\n      const specsColumnIndexes = {\n        type: specsHeaders.indexOf('Type'),\n        specs: specsHeaders.indexOf('Specs'),\n        imageUrl: specsHeaders.indexOf('ImageURL'),\n        primaryColor: specsHeaders.indexOf('PrimaryColor'),\n        secondaryColor: specsHeaders.indexOf('SecondaryColor')\n      };\n\n      // Проверяем, что основные колонки спецификаций найдены\n      const missingSpecsColumns = ['type', 'specs'].filter(\n        name => specsColumnIndexes[name as keyof typeof specsColumnIndexes] === -1\n      );\n      \n      if (missingSpecsColumns.length > 0) {\n        console.error(`Отсутствуют обязательные колонки в таблице спецификаций: ${missingSpecsColumns.join(', ')}`);\n        return { items: [], specs: {} as Record<EquipmentType, EquipmentSpecsRow> };\n      }\n\n      // Обработка данных об оборудовании\n      const items: EquipmentRow[] = [];\n      \n      for (let i = 1; i < equipmentRows.length; i++) {\n        const row = equipmentRows[i];\n        \n        // Проверяем, что строка содержит достаточно данных\n        if (row.length <= Math.max(...Object.values(equipmentColumnIndexes))) {\n          console.warn(`Строка ${i} содержит недостаточно данных`);\n          continue;\n        }\n        \n        // Проверяем тип оборудования\n        const typeValue = row[equipmentColumnIndexes.type];\n        if (!typeValue) {\n          console.warn(`Некорректный тип оборудования в строке ${i}: ${typeValue}`);\n          continue;\n        }\n        \n        // Проверяем доступность\n        const availableValue = row[equipmentColumnIndexes.available];\n        if (!availableValue) {\n          console.warn(`Отсутствует значение доступности в строке ${i}`);\n          continue;\n        }\n        \n        const isAvailable = availableValue.toUpperCase() === 'TRUE';\n        \n        items.push({\n          id: row[equipmentColumnIndexes.id] || `auto-${i}`,\n          type: row[equipmentColumnIndexes.type] as EquipmentType,\n          swl: row[equipmentColumnIndexes.swl] || '0',\n          length: row[equipmentColumnIndexes.length] || '0',\n          pricePerWeek: row[equipmentColumnIndexes.pricePerWeek] || '0',\n          available: isAvailable\n        });\n      }\n\n      // Фильтруем только доступные элементы\n      const availableItems = items.filter(item => item.available);\n      \n      // Обработка данных о спецификациях\n      const specs: Record<EquipmentType, EquipmentSpecsRow> = {} as Record<EquipmentType, EquipmentSpecsRow>;\n      \n      for (let i = 1; i < specsRows.length; i++) {\n        const row = specsRows[i];\n        \n        // Проверяем, что строка содержит достаточно данных\n        if (row.length <= specsColumnIndexes.type) {\n          console.warn(`Строка спецификаций ${i} содержит недостаточно данных`);\n          continue;\n        }\n        \n        const typeValue = row[specsColumnIndexes.type];\n        \n        // Проверяем тип оборудования\n        if (!typeValue) {\n          console.warn(`Некорректный тип оборудования в строке спецификаций ${i}: ${typeValue}`);\n          continue;\n        }\n        \n        const type = typeValue as EquipmentType;\n        \n        specs[type] = {\n          type,\n          specs: specsColumnIndexes.specs >= 0 && row[specsColumnIndexes.specs] \n            ? row[specsColumnIndexes.specs].split(';').map((s: string) => s.trim())\n            : [],\n          imageUrl: specsColumnIndexes.imageUrl >= 0 ? row[specsColumnIndexes.imageUrl] : '',\n          primaryColor: specsColumnIndexes.primaryColor >= 0 && row[specsColumnIndexes.primaryColor] \n            ? row[specsColumnIndexes.primaryColor] \n            : '#FFD700',\n          secondaryColor: specsColumnIndexes.secondaryColor >= 0 && row[specsColumnIndexes.secondaryColor] \n            ? row[specsColumnIndexes.secondaryColor] \n            : '#FFFDE7'\n        };\n      }\n\n      console.log(`Processed ${availableItems.length} available equipment items`);\n      console.log(`Processed specifications for ${Object.keys(specs).length} equipment types`);\n\n      return { items: availableItems, specs };\n    } catch (error) {\n      console.error('Ошибка при обработке данных из Google Sheets:', error);\n      return { items: [], specs: {} as Record<EquipmentType, EquipmentSpecsRow> };\n    }\n  }\n\n  /**\n   * Преобразует данные из Google Sheets в структуру данных для компонентов\n   */\n  transformToComponentData(data: SheetsData): Record<EquipmentType, any> {\n    const result: Record<EquipmentType, any> = {} as Record<EquipmentType, any>;\n    \n    // Группировка данных по типу оборудования\n    const itemsByType: Record<string, EquipmentRow[]> = {};\n    \n    // Сначала группируем данные по типу оборудования\n    data.items.forEach(item => {\n      if (!itemsByType[item.type]) {\n        itemsByType[item.type] = [];\n      }\n      itemsByType[item.type].push(item);\n    });\n    \n    // Получаем уникальные типы оборудования\n    const equipmentTypes = Object.keys(itemsByType);\n    \n    console.log(`Found equipment types: ${equipmentTypes.join(', ')}`);\n    \n    // Обрабатываем каждый тип оборудования\n    equipmentTypes.forEach(type => {\n      const items = itemsByType[type];\n      \n      if (items.length > 0) {\n        // Извлекаем уникальные параметры (SWL и длина/HOL)\n        const swlOptions = [...new Set(items.map(item => item.swl))];\n        const lengthOptions = [...new Set(items.map(item => item.length))];\n        \n        // Создаем карту цен\n        const priceMapping: Record<string, Record<string, number>> = {};\n        \n        swlOptions.forEach(swl => {\n          priceMapping[swl] = {};\n          const swlItems = items.filter(item => item.swl === swl);\n          \n          swlItems.forEach(item => {\n            priceMapping[swl][item.length] = parseFloat(item.pricePerWeek) || 0;\n          });\n        });\n        \n        // Получаем спецификации для этого типа\n        const specs = data.specs[type]?.specs || [];\n        const imageUrl = data.specs[type]?.imageUrl || '';\n        \n        // Создаем данные для компонента\n        result[type] = {\n          swlOptions,\n          lengthOptions, // Используем lengthOptions для всех типов\n          holOptions: lengthOptions, // Для обратной совместимости с LeverHoist\n          priceMapping,\n          specs,\n          image: imageUrl,\n          // Для разных типов могут быть специфические поля\n          // Например, для RoundSling мы добавляем availableColors\n          ...(type === 'RoundSling' ? {\n            availableColors: specs[0]?.split(',')?.map(s => s.trim()) || []\n          } : {})\n        };\n      }\n    });\n    \n    return result;\n  }\n}\n\n// Экспортируем инстанс сервиса для использования в компонентах\nexport const sheetsService = new GoogleSheetsService(); "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/data/equipmentIcons.ts"],"sourcesContent":["// SVG иконки для оборудования\r\nexport const leverHoistSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path d=\"M12 2v6M2 9h20M5 9l3 9M19 9l-3 9M8 18h8M12 18v4\" />\r\n  <circle cx=\"12\" cy=\"12\" r=\"1\" />\r\n</svg>`;\r\n\r\n// SVG иконка для Round Sling\r\nexport const roundSlingSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <circle cx=\"12\" cy=\"12\" r=\"8\" />\r\n  <circle cx=\"12\" cy=\"12\" r=\"4\" />\r\n  <path d=\"M12 4v2M12 18v2M4 12H6M18 12h2\" />\r\n</svg>`;\r\n\r\n// SVG иконка для Webbed Sling\r\nexport const webbedSlingSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <rect x=\"4\" y=\"8\" width=\"16\" height=\"8\" rx=\"1\" />\r\n  <path d=\"M4 12h16\" />\r\n  <path d=\"M8 8V6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\r\n  <path d=\"M8 16v2a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-2\" />\r\n</svg>`; "],"names":[],"mappings":"AAAA,8BAA8B;;;;;;AACvB,MAAM,gBAAgB,CAAC;;;MAGxB,CAAC;AAGA,MAAM,gBAAgB,CAAC;;;;MAIxB,CAAC;AAGA,MAAM,iBAAiB,CAAC;;;;;MAKzB,CAAC","debugId":null}},
    {"offset": {"line": 1282, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/components/EquipmentContainer.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport EquipmentCard from './EquipmentCard';\nimport { sheetsService } from '@/services/sheetsService';\nimport { EquipmentTypes } from '@/types/equipment';\nimport { leverHoistSvg, roundSlingSvg, webbedSlingSvg } from '@/data/equipmentIcons';\n\n// Фиксированный URL для загрузки данных Google Sheets\nconst GOOGLE_SHEETS_URL = 'https://docs.google.com/spreadsheets/d/1aulId2489sH3YyxJKpfvIWq7-yWdvhVK/edit?gid=1275867136';\n\n// SVG иконки по умолчанию для известных типов оборудования\nconst defaultSvgIcons: Record<string, string> = {\n  [EquipmentTypes.LeverHoist]: leverHoistSvg,\n  [EquipmentTypes.RoundSling]: roundSlingSvg,\n  [EquipmentTypes.WebbedSling]: webbedSlingSvg\n};\n\nconst EquipmentContainer: React.FC = () => {\n  const [equipmentData, setEquipmentData] = useState<Record<string, any> | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Загрузка данных из Google Sheets\n  const loadEquipmentData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      console.log('Loading equipment data from:', GOOGLE_SHEETS_URL);\n      const sheetsData = await sheetsService.fetchEquipmentData(GOOGLE_SHEETS_URL);\n      \n      console.log('Received sheets data:', sheetsData);\n      \n      if (sheetsData.items.length === 0) {\n        setError('No equipment items found in the spreadsheet. Please check the sheet structure and data format.');\n        setEquipmentData(null);\n        setLoading(false);\n        return;\n      }\n      \n      const transformedData = sheetsService.transformToComponentData(sheetsData);\n      console.log('Transformed data:', transformedData);\n      \n      if (Object.keys(transformedData).length === 0) {\n        setError('Failed to process equipment data. Please check the sheet structure and data format.');\n        setEquipmentData(null);\n      } else {\n        setEquipmentData(transformedData);\n      }\n    } catch (err) {\n      console.error('Error loading equipment data:', err);\n      setError(`Failed to load equipment data: ${err instanceof Error ? err.message : String(err)}`);\n      setEquipmentData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadEquipmentData();\n  }, []);\n\n  // Преобразуем данные из различных источников в единый массив элементов\n  const getAllEquipmentItems = () => {\n    if (!equipmentData) return [];\n    \n    // Собираем все элементы оборудования из разных категорий в единый массив\n    const allItems: Array<{type: string, title: string, data: any}> = [];\n    \n    Object.entries(equipmentData).forEach(([type, typeData]) => {\n      // Проверяем, что у нас есть корректные данные для этого типа оборудования\n      if (typeData && typeData.swlOptions && typeData.swlOptions.length > 0) {\n        // Добавляем один элемент для каждого типа оборудования\n        allItems.push({\n          type,\n          title: type, // Используем тип как заголовок\n          data: {\n            ...typeData,\n            title: type,\n            // Убедимся, что все необходимые свойства присутствуют\n            swlOptions: typeData.swlOptions || [],\n            lengthOptions: typeData.lengthOptions || typeData.holOptions || [],\n            priceMapping: typeData.priceMapping || {},\n            specs: typeData.specs || [],\n            image: typeData.image || ''\n          }\n        });\n      }\n    });\n    \n    console.log('Processed items for rendering:', allItems);\n    return allItems;\n  };\n\n  // Рендеринг сетки плиток с оборудованием\n  const renderEquipmentGrid = () => {\n    const allItems = getAllEquipmentItems();\n    \n    if (allItems.length === 0) {\n      return (\n        <div className=\"no-equipment-message\">\n          <p>No equipment items found. Please check the data source.</p>\n        </div>\n      );\n    }\n    \n    // Добавляем класс в зависимости от количества элементов\n    const itemsCountClass = `items-${allItems.length}`;\n    \n    // Для поддержки медиа-запросов и адаптивности, возвращаем просто класс без стилей\n    return (\n      <div className={`equipment-cards-grid ${itemsCountClass}`}>\n        {allItems.map((item, index) => (\n          <EquipmentCard\n            key={`${item.type}-${index}`}\n            type={item.type}\n            title={item.title}\n            data={item.data}\n            defaultIcon={defaultSvgIcons[item.type] || ''}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  // Отображение компонента с контейнером оборудования\n  return (\n    <div className=\"equipment-container\">\n      <h2 className=\"equipment-main-title\">Equipment Catalogue</h2>\n      \n      {loading && (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading equipment data...</p>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-container\">\n          <h3>Error Loading Equipment</h3>\n          <p>{error}</p>\n          <div className=\"error-details\">\n            <p>Troubleshooting tips:</p>\n            <ul>\n              <li>Check if the Google Sheets URL is correct and accessible</li>\n              <li>Verify that the sheet has the expected columns and data format</li>\n              <li>Make sure the spreadsheet is publicly accessible or has appropriate permissions</li>\n            </ul>\n            <button className=\"retry-btn\" onClick={loadEquipmentData}>\n              Retry Loading\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {!loading && !error && equipmentData && renderEquipmentGrid()}\n    </div>\n  );\n};\n\nexport default EquipmentContainer; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1548, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/components/EnquirySection.tsx"],"sourcesContent":["import React from 'react';\n\nconst EnquirySection: React.FC = () => {\n  return (\n    <section className=\"enquiry-section\" id=\"enquiry-form\">\n      <h2 className=\"enquiry-title\">Need Equipment for Your Project?</h2>\n      <p className=\"enquiry-text\">\n        Submit a request and we'll help you select the right equipment \n        to meet your technical requirements and project timeline.\n      </p>\n      <a href=\"#\" id=\"enquire-button\" className=\"enquiry-button\">\n        Request Equipment\n      </a>\n      <div className=\"contact-info\">\n        <p>Call us: <a href=\"tel:+447478136061\">+44 7478 136061</a></p>\n        <p>Call us: <a href=\"tel:+447340626369\">+44 7340 626369</a></p>\n        <p>Email: <a href=\"mailto:e.b.install.ltd@gmail.com\">e.b.install.ltd@gmail.com</a></p>\n      </div>\n    </section>\n  );\n};\n\nexport default EnquirySection; "],"names":[],"mappings":";;;;;AAEA,MAAM,iBAA2B;IAC/B,qBACE,6LAAC;QAAQ,WAAU;QAAkB,IAAG;;0BACtC,6LAAC;gBAAG,WAAU;0BAAgB;;;;;;0BAC9B,6LAAC;gBAAE,WAAU;0BAAe;;;;;;0BAI5B,6LAAC;gBAAE,MAAK;gBAAI,IAAG;gBAAiB,WAAU;0BAAiB;;;;;;0BAG3D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;4BAAE;0CAAS,6LAAC;gCAAE,MAAK;0CAAoB;;;;;;;;;;;;kCACxC,6LAAC;;4BAAE;0CAAS,6LAAC;gCAAE,MAAK;0CAAoB;;;;;;;;;;;;kCACxC,6LAAC;;4BAAE;0CAAO,6LAAC;gCAAE,MAAK;0CAAmC;;;;;;;;;;;;;;;;;;;;;;;;AAI7D;KAlBM;uCAoBS","debugId":null}},
    {"offset": {"line": 1664, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user1/Documents/GitHub/ebinstall/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect } from 'react';\nimport Header from '@/components/Header';\nimport MainHeader from '@/components/MainHeader';\nimport CompanyInfo from '@/components/CompanyInfo';\nimport EquipmentContainer from '@/components/EquipmentContainer';\nimport EnquirySection from '@/components/EnquirySection';\nimport '@/styles/components.css';\n\nexport default function Home() {\n  useEffect(() => {\n    // Добавить обработчик клика для кнопки \"Get a Quote\"\n    if (typeof window !== 'undefined') {\n      const quoteButton = document.querySelector('.quote-button');\n      if (quoteButton) {\n        quoteButton.addEventListener('click', scrollToEnquiry);\n      }\n\n      return () => {\n        // Очистка обработчика событий при размонтировании\n        if (quoteButton) {\n          quoteButton.removeEventListener('click', scrollToEnquiry);\n        }\n      };\n    }\n  }, []);\n\n  const scrollToEnquiry = (e: React.MouseEvent | Event) => {\n    e.preventDefault();\n    \n    if (typeof window !== 'undefined') {\n      const enquirySection = document.querySelector('.enquiry-section');\n      if (enquirySection) {\n        enquirySection.scrollIntoView({ behavior: 'smooth' });\n        \n        const enquireButton = document.getElementById('enquire-button');\n        if (enquireButton) {\n          enquireButton.classList.add('pulse-animation');\n          setTimeout(() => {\n            enquireButton.classList.remove('pulse-animation');\n          }, 1500);\n        }\n      }\n    }\n  };\n\n  return (\n    <main>\n      <Header />\n      <MainHeader />\n      <CompanyInfo />\n      <EquipmentContainer />\n      <EnquirySection />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;;AAUe,SAAS;;IACtB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,qDAAqD;YACrD,wCAAmC;gBACjC,MAAM,cAAc,SAAS,aAAa,CAAC;gBAC3C,IAAI,aAAa;oBACf,YAAY,gBAAgB,CAAC,SAAS;gBACxC;gBAEA;sCAAO;wBACL,kDAAkD;wBAClD,IAAI,aAAa;4BACf,YAAY,mBAAmB,CAAC,SAAS;wBAC3C;oBACF;;YACF;QACF;yBAAG,EAAE;IAEL,MAAM,kBAAkB,CAAC;QACvB,EAAE,cAAc;QAEhB,wCAAmC;YACjC,MAAM,iBAAiB,SAAS,aAAa,CAAC;YAC9C,IAAI,gBAAgB;gBAClB,eAAe,cAAc,CAAC;oBAAE,UAAU;gBAAS;gBAEnD,MAAM,gBAAgB,SAAS,cAAc,CAAC;gBAC9C,IAAI,eAAe;oBACjB,cAAc,SAAS,CAAC,GAAG,CAAC;oBAC5B,WAAW;wBACT,cAAc,SAAS,CAAC,MAAM,CAAC;oBACjC,GAAG;gBACL;YACF;QACF;IACF;IAEA,qBACE,6LAAC;;0BACC,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC,mIAAA,CAAA,UAAU;;;;;0BACX,6LAAC,oIAAA,CAAA,UAAW;;;;;0BACZ,6LAAC,2IAAA,CAAA,UAAkB;;;;;0BACnB,6LAAC,uIAAA,CAAA,UAAc;;;;;;;;;;;AAGrB;GA9CwB;KAAA","debugId":null}}]
}